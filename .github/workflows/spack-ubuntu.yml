name: spack-ubuntu

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  init:
    name: ${{ matrix.config }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac.
    runs-on: ubuntu-latest
    container:
      image: aberzen/mgx-ubuntu.20.04-spack.0.19.0:1.2.0
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # seems to be needed by codecov
          submodules: recursive

      - name: Initialize the dev environment
        shell: bash
        run : |
          source /spack/share/spack/setup-env.sh
          git clone --depth=1 https://github.com/LIHPC-Computational-Geometry/spack_recipes_meshing.git
          spack repo add ./spack_recipes_meshing/meshing_repo
          spack repo add ./spack_recipes_meshing/supersede_repo
      - name: Build and install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh 
          spack env activate meshing-env
          spack load cmake
          spack add triton2@main
          spack install --no-checksum
      - name: Test c++ lib install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          spack env activate meshing-env
          spack load cmake
          spack load triton2
          cd test_link/
          cmake -S . -B build_exe
          cmake --build build_exe
          cd build_exe
          ctest
